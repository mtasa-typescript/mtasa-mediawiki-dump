__NOTOC__ 
{{Server function}}
<!-- Describe in plain english what this function does. Don't go into details, just give an overview -->
{{New feature/item|3.0158|1.5.7|19626|
This will allow you to retrieve the player current debug script level.
}}
==Syntax== 
<!-- NOTE: don't use 'special' names for variable names, e.g. you shouldn't be writing things like 'player player, vehicle vehicle', instead write something like 'player thePlayer, vehicle vehicleToGetInto'. This is less confusing and prevents the syntax highlighting being odd -->
<syntaxhighlight lang="lua">
int getPlayerScriptDebugLevel( player thePlayer )
</syntaxhighlight> 
{{OOP||[[player]]:getScriptDebugLevel|scriptDebugLevel|setPlayerScriptDebugLevel}}
===Required Arguments=== 
<!-- List each argument one per line. This should be the argument's name as in the argument list above, NOT the argument's data type -->
*'''thePlayer:''' The person whose debug script level you want

===Returns===
<!-- Make this descriptive. Explain what cases will return false. If you're unsure, add a tag to it so we can check -->
Returns an ''int'' with the player debug script level, ''false'' if the player is invalid.

==Example== 
<!-- Explain what the example is in a single sentance -->
<!-- Add the code below, an emphasis should be on making it clear, not optimized. You could provide two versions if you wish, one clear and well commented, the other optimized -->
Displays a message in the chat what is the player's debug level.
<syntaxhighlight lang="lua">
function showdebug (player)
    local level = getPlayerScriptDebugLevel( player )
    outputChatBox( "Your Script Debug Level: " .. level )
end
addCommandHandler ( "showdebug", showdebug )
</syntaxhighlight>

==Requirements==
{{Requirements|1.5.7-9.19626|n/a|}}

==See Also==
<!-- Change FunctionArea to the area that this function is in on the main function list page, e.g. Server, Player, Vehicle etc -->
{{Player_functions}}
