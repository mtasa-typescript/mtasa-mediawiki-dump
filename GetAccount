__NOTOC__
{{Server function}}
This function returns an [[account]] for a specific user. 
==Syntax==
<syntaxhighlight lang="lua">
account getAccount ( string username [, string password, bool caseSensitive = true ] )
</syntaxhighlight>
{{OOP||[[Account]]||}}
===Required Arguments===
*'''username:''' The username of the account you want to retrieve

===Optional Arguments===
{{OptionalArg}}
*'''password:''' The password for the account. If this argument is not specified, you can get the account whatever password it is, otherwise the password must match the account's.
{{New items|3.0157|1.5.6|
* '''caseSensitive''': Specifies whether to ignore the case when searching for an account.
|16257}}

===Returns===
Returns an [[account]] or ''false'' if an account matching the username specified (and password, if specified) could not be found.

==Example==
<section name="Server example 1" class="server" show="true">
This function checks if the account mentioned exists in the internal.db database file.
<syntaxhighlight lang="lua">
addCommandHandler("checkaccount",
	function(player, cmd, account)
		if hasObjectPermissionTo(player, "function.banPlayer" ) then -- if the player typing /checkaccount command has permission to banPlayer
			if account and account ~= "" then -- if the account name was mentioned
				if getAccount(account) then -- if the account exists
					outputChatBox("Account "..account.." exists in the database!", player, 0, 255, 0)
				else -- if the account doesn't exist
					outputChatBox("Account "..account.." does not exist in database", player, 0, 255, 0)
				end
			else
			outputChatBox("Syntax is /checkaccount [account name]", player, 255, 0, 0)
			end
		end
	end
)
</syntaxhighlight></section>

==See Also==
{{Account functions}}

[[ar:getAccount]]
[[es:getAccount]]
[[pl:GetAccount]]
[[ru:getAccount]]
[[zh-cn:getAccount]]
