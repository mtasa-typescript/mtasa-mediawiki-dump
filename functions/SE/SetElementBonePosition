__NOTOC__
{{Client function}}
{{Added feature/item|1.5.9|1.5.8|20704|This function sets the position of a bone to the specified coordinates. Currently the [[Element/Player|Player]] and [[Element/Ped|Ped]] element types are accepted.}}
{{Tip|If you want to attach an element to a bone, see [[attachElementToBone]].}}
{{Note|You need to use this function together with [[onClientPedsProcessed]].}}

==Syntax==
<syntaxhighlight lang="lua">
bool setElementBonePosition ( element theElement, int bone, float x, float y, float z )
</syntaxhighlight>

===Required Arguments===
*'''theElement:''' the [[Element|element]] to set the bone position on.
*'''bone:''' the ID of the bone to set the position of. See [[Bone IDs]].
*'''x:''' The X coordinate of the destination.
*'''y:''' The Y coordinate of the destination.
*'''z:''' The Z coordinate of the destination.

===Returns===
Returns ''true'' if the function was successful, ''false'' otherwise.

==Example==
[[File:CJ with long neck.png|thumb|alt=CJ with long neck|Example preview]]
This example shows a surprised CJ with a long neck
<syntaxhighlight lang="lua">
local bones = {
    [4] = Vector3(0, 0, 0.15),
    [5] = Vector3(0, 0, 0.15),
    [6] = Vector3(0, 0, 0.13),
    [7] = Vector3(0, 0, 0.13),
    [8] = Vector3(0, 0, 0.1),
}
function updatePed()
    for bone,v in pairs(bones) do
        local pos = localPlayer:getBonePosition(bone)+v
        setElementBonePosition(localPlayer, bone, pos)
    end
end
addEventHandler("onClientPedsProcessed", root, updatePed)
</syntaxhighlight>

==Requirements==
{{Requirements|n/a|1.5.8-9.20704|}}

==See Also==
{{Client_element_functions}}
