__NOTOC__
{{Client function}}
{{Added feature/item|1.5.9|1.5.8|20704|This function sets the position of a bone to the specified coordinates. Currently the [[Element/Player|Player]] and [[Element/Ped|Ped]] element types are accepted.}}
{{Tip|If you want to attach an element to a bone, see [[attachElementToBone]].}}
{{Note|You need to use this function together with [[onClientPedsProcessed]].}}

==Syntax==
<syntaxhighlight lang="lua">
bool setElementBonePosition ( element theElement, int boneId, float x, float y, float z )
</syntaxhighlight>

===Required Arguments===
*'''theElement:''' the [[Element|element]] to set the bone position on.
*'''boneId:''' the ID of the bone to set the position of. See [[Bone IDs]].
*'''x:''' The X coordinate of the destination.
*'''y:''' The Y coordinate of the destination.
*'''z:''' The Z coordinate of the destination.

===Returns===
Returns ''true'' if the function was successful, ''false'' otherwise.

==Example==
This example is a command where the player should input the bone ID and the XYZ coordinates to set one of his bones' position:
<syntaxhighlight lang="lua">
function setBonePosition (commandName, boneId, x, y, z)
    if (not boneId or not x or not y or not z) then
        outputChatBox ("Syntax: /setbonepos [boneID, x, y, z]", 255, 25, 25)
        return false
    end
    if (not tonumber(id) or not tonumber(x) or not tonumber(y) or not tonumber(z)) then
        outputChatBox ("Command arguments should be numbers!", 255, 25, 25)
        return false
    end

    setElementBonePosition (localPlayer, ID, x, y, z)
    outputChatBox ("Bone position set successfully!", 0, 255, 0)
end

addCommandHandler ("setbonepos", setBonePosition)
</syntaxhighlight>

==Requirements==
{{Requirements|n/a|1.5.8-9.20704|}}

==See Also==
{{Client_element_functions}}
