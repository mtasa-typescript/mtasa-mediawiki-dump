__NOTOC__
{{Client function}}
{{Added feature/item|1.5.9|1.5.8|20740|This function makes a [[ped]] enter a [[vehicle]], similar to the enter_exit control state.}}
{{Note|This function only works on synced peds and vehicles (ie. created serverside).}}
{{Note|This function only works within the following limits:
* If forced to enter as a passenger, it doesn't work if all passenger seats are occupied. Only the driver seat can be jacked.
* If forced to enter as a driver, the ped can carjack the current driver.
** If the driver's door is blocked by something, the ped can use the opposite front door to reach the driver's seat, jacking the passenger in the process.
* If a vehicle is not specified:
** The ped will search for a vehicle door within 20 m.
** If the vehicle has a driver, the limit becomes 10 m.
* If a vehicle is specified:
** The vehicle has to be within 50 m. The doors aren't taken into account. It means that it doesn't work if the vehicle's door is in range but the vehicle itself is not.
** If the vehicle has a driver, the limit becomes 10 m.
* When entering, the ped will run toward a vehicle if it is less than 50 m away.
* The ped reserves the seat he is trying to use. It means nobody can enter the respective seat while the ped is running toward it.
** Exception: If the ped is forced to enter as a passenger and is going to use the front door, the ped can wait if someone is using it to go the driver seat.
}}

==Syntax== 
<syntaxhighlight lang="lua">
bool setPedEnterVehicle ( ped thePed [, vehicle theVehicle = nil, bool passenger = false ] )
</syntaxhighlight> 

===Required Arguments=== 
*'''thePed:''' The [[player]] or [[ped]] to enter the vehicle.
**''Note: The player must be the local player.''
**''Note: The ped must be synced by the client. Use [[isElementSyncer]] clientside to check if the client is syncing. Use [[setElementSyncer]] serverside to change the syncer manually.''
*'''vehicle:''' The [[vehicle]] to enter. If no vehicle is set, the ped will enter the nearest vehicle within 20 m.
*'''passenger:''' If set to ''true'', the ped will enter as passenger in the nearest available seat, otherwise he will enter as driver.

===Returns===
Returns ''true'' if the function was successful, ''false'' otherwise.

When this function returns ''true'', the client will ask server for permission to enter a vehicle. Actually entering can still fail in the following cases
*Another player or ped is already entering, exiting or jacking the same vehicle and seat.
*Movement input or damage can interrupt the task. Use [[getPedTask]] to monitor what the ped is doing.

This function returns ''false'' in the following cases
*Invalid arguments were parsed.
*Time passed since last enter/exit for this ped is less than 1500 ms.
*[[onClientVehicleStartEnter]] was cancelled by a script.
*The ped has an active TASK_PRIMARY [[task]]. Use [[getPedTask]] to monitor what the ped is doing.

==Example== 
Make [[ped]] Sweet enter his car:
<section name="Server" class="server" show="true">
<syntaxhighlight lang="lua">
local sweet = createPed (270, 0, 0, 3)
setElementID (sweet, "sweet")

local sweetscar = createVehicle (492, 3, 0, 3)
setElementID (sweetscar, "sweetscar")
</syntaxhighlight>
</section>

<section name="Client" class="client" show="true">
<syntaxhighlight lang="lua">
-- Code works only if client is syncing ped Sweet
addCommandHandler ("sweetentercar",
function()
    local sweet = getElementByID ("sweet")

    if isElementSyncer (sweet) then
        setPedEnterVehicle (sweet, getElementByID("sweetscar"), true)
    end
end)
</syntaxhighlight>
</section>

==Requirements==
{{Requirements|1.5.8-9.20740|1.5.8-9.20740}}

==See Also==
{{Client ped functions}}
