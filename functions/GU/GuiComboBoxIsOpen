{{Client function}}
__NOTOC__
{{New feature/item|3.0157|1.5.6|14489|This function returns the state of combobox.}}

==Syntax== 
<syntaxhighlight lang="lua">
bool guiComboBoxIsOpen( element comboBox )
</syntaxhighlight>
{{OOP||[[Element/GUI/Combobox|GuiComboBox]]:isOpen|open|guiComboBoxSetOpen}}

===Required Arguments=== 
*'''comboBox:''' The combo box to get the state.

===Returns===
Returns ''true'' if combobox is opened, ''false'' if combobox is closed, ''nil'' otherwise.

==Example== 
This example opens/closes the combobox after clicking the button. Checking if combobox is opened and change button text.
<syntaxhighlight lang="lua">
local comboBox = guiCreateComboBox(0.30,0.45,0.30,0.20,'Test',true) -- create the gui combo-box
local openButton = guiCreateButton(0.35,0.31,0.15,0.15,'Show numbers',true) -- create the button

for i = 1,20 do
	guiComboBoxAddItem(comboBox, tostring(i)) -- add items
end

addEventHandler('onClientGUIClick',openButton,function()
	if not guiComboBoxIsOpen(comboBox) then
		guiComboBoxSetOpen(comboBox, true) -- open the combobox
		guiSetText(source, 'Hide numbers')
	else
		guiComboBoxSetOpen(comboBox, false) -- close the combobox
		guiSetText(source, 'Show numbers')
	end
end)
</syntaxhighlight>

==See Also==
{{GUI functions}}
{{GUI_events}}
