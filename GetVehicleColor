__NOTOC__ 
{{Server client function}}
This function returns the color of the specified vehicle. A vehicle can have up to four colors.

==Syntax== 
<syntaxhighlight lang="lua">
int, int, int, int, int, int, int, int, int, int, int, int getVehicleColor ( vehicle theVehicle, bool bRGB )
</syntaxhighlight> 

{{OOP||[[vehicle]]:getColor}}

===Required Arguments=== 
*'''theVehicle:''' The [[vehicle]] that you wish to get the color of.
*'''bRGB :''' A boolean specifying whether to return RGB values. A setting of ''false'' will result in the function returning color ids instead.

===Returns===
*Returns 12 [[int|ints]] (if bRGB is ''true'') indicating the red, green and blue components of each of the 4 vehicle colors.
*Returns 4 [[int|ints]] (if bRGB is ''false'') indicating the color ids of each of the 4 vehicle colors.
*Returns ''false'' if the vehicle doesn't exist.

Valid color ids if bRGB is set to false:
{{Vehicle_colors}}
<br>

==Example==
<section name="Server" class="server" show="true"> 
This will output the 4 colors of any car that the player enters.
<syntaxhighlight lang="lua">
function playerEnterVehicle ( theVehicle, seat, jacked )
    -- Get the colors of the car and store them to 4 seperate variables
    local color1, color2, color3, color4 = getVehicleColor ( theVehicle )
    -- Output the four retrieved car colors into the chatbox
    outputChatBox ( "Car color 1: " .. color1 )
    outputChatBox ( "Car color 2: " .. color2 )
    outputChatBox ( "Car color 3: " .. color3 )
    outputChatBox ( "Car color 4: " .. color4 )
end
addEventHandler ( "onPlayerVehicleEnter", root, playerEnterVehicle )
</syntaxhighlight>
</section>

==See Also==
{{Vehicle functions}}
